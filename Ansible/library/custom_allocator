#!/bin/bash
##############################################################
#
#Returns host
#####################################################################################
# Vars
#


ARGS="(`cat $1`)"

ALGORITHM=`echo $ARGS | tr " " "\n"| awk -F= '$1=="algorithm"{print $2}'| tr -d '"' | sed -e 's/[[:space:]]*$//'`
CLUSTERID=`echo $ARGS | tr " " "\n"| awk -F= '$1=="clusterid"{print $2}'| tr -d '"' | sed -e 's/[[:space:]]*$//'`
PODID=`echo $ARGS | tr " " "\n"| awk -F= '$1=="podid"{print $2}'| tr -d '"' | sed -e 's/[[:space:]]*$//'` ## FOR LATER
METRIC=`echo $ARGS | tr " " "\n"| awk -F= '$1=="metric"{print $2}'| tr -d '"' | sed -e 's/[[:space:]]*$//'` ## FOR LATER
ZONEID=`echo $ARGS | tr " " "\n"| awk -F= '$1=="zoneid"{print $2}'| tr -d '"' | sed -e 's/[[:space:]]*$//'` ## FOR LATER

function least_cluster()
{
  LOWESTCLUSTERID=`cloudmonkey list clustersmetrics allocationstate=Enabled | jq -r '.cluster | sort_by(.cpuused|rtrimstr("%")|tonumber) | .[0]|.id'`
  LOWESTCLUSTERNAME=`cloudmonkey list clusters id=$LOWESTCLUSTERID | jq -r '.cluster[] | .name'`
}

function least_host()
{
  HOSTUSE=`cloudmonkey list hosts type=routing resourcestate=Enabled | jq '.host[]' | sed 's/\%//'`
  LOWESTHOSTID=`echo $HOSTUSE | jq -r -s -c 'sort_by(.cpuused|tonumber) | .[0] | .id'`
  LOWESTCLUSTERID=`echo $HOSTUSE | jq -r -s -c 'sort_by(.cpuused|tonumber) | .[0] | .clusterid'`
  LOWESTHOSTNAME=`cloudmonkey list hosts id=$LOWESTHOSTID | jq -r '.host[] | .name'`
  LOWESTCLUSTERNAME=`cloudmonkey list clusters id=$LOWESTCLUSTERID | jq -r '.cluster[] | .name'`
}

function least_host_in_cluster()
{
  HOSTUSE=`cloudmonkey list hosts type=routing clusterid=$CLUSTERID| jq '.host[]' | sed 's/\%//'`
  LOWESTHOSTID=`echo $HOSTUSE | jq -r -s -c 'sort_by(.cpuused|tonumber) | .[0] | .id'`
  LOWESTHOSTNAME=`cloudmonkey list hosts id=$LOWESTHOSTID | jq -r '.host[] | .name'`
}


################################################################################
# ReturnFact:
# Return parsed environment info
#
function ReturnFact()
{

cat << EOF
{
"ansible_facts": {
  "allocator_host_id": "${LOWESTHOSTID}",
  "allocator_cluster_id": "${LOWESTCLUSTERID}",
  "allocator_pod_id": "${LOWESTPODID}",
  "allocator_cluster_name": "${LOWESTCLUSTERNAME}",
  "allocator_host_name": "${LOWESTHOSTNAME}",  
  "env_return": "success",
  "env_retmsg": "${MSG}"
 }
}
EOF
}

export TERM=vt100
cloudmonkey set display json
cloudmonkey set color false


LOWESTCLUSTERID=""
LOWESTHOSTID=""
LOWESTPODID=""
## DO STUFF

case "$ALGORITHM" in
  least_host)
    least_host;
    MSG="Returning lowest used host in zone"
    ReturnFact;
  ;;
  least_host_least_cluster)
    least_cluster;
    CLUSTERID=${LOWESTCLUSTERID}
    least_host_in_cluster;
    MSG="Returning lowest used host in lowest used cluster in zone"
    ReturnFact;
  ;;
  least_cluster)
    least_cluster;
    MSG="Returning lowest used cluster in zone"
    ReturnFact;
  ;;
  least_host_in_cluster)
    least_host_in_cluster;
    LOWESTCLUSTERID=${CLUSTERID}
    MSG="Returning lowest used host in given cluster"
    ReturnFact;
  ;;

esac
exit
